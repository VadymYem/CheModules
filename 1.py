

from random import choice, randint

from .. import loader, utils
from ..inline.types import InlineQuery


@loader.tds
class InlineRandomMod(loader.Module):
    """Random tools for your userbot"""

    strings = {"name": "InlineRandom"}

    @loader.inline_everyone
    async def coin_inline_handler(self, query: InlineQuery) -> dict:
        """–û—Ä–µ–ª —á–∏ –†–µ—à–∫–∞?"""

        r = "ü¶Ö –û—Ä–µ–ª" if randint(0, 1) else "ü™ô –†–µ—à–∫–∞"

        return {
            "title": "–ö–∏–Ω—É—Ç–∏ –º–æ–Ω–µ—Ç–∫—É =)",
            "description": "–û—Ä–µ–ª —á–∏ —Ä–µ—à–∫–∞. –ü–µ—Ä–µ–≤—ñ—Ä —Å–≤–æ—é –≤–¥–∞—á—É!",
            "message": f"<i>–í —Ç–µ–±–µ –≤–∏–ø–∞–ª–æ...</i> <b>{r}</b>",
            "thumb": "https://img.icons8.com/external-justicon-flat-justicon/64/000000/external-coin-pirates-justicon-flat-justicon-1.png",
        }

    @loader.inline_everyone
    async def random_inline_handler(self, query: InlineQuery) -> dict:
        """[number] - –≤–∏–±—Ä–∞—Ç–∏ —Ä–∞–Ω–¥–æ–º —á–∏—Å–ª–æ –º–µ–Ω—à–µ –≤–∫–∞–∑–∞–Ω–æ–≥–æ"""

        if not query.args:
            return

        a = query.args

        if not str(a).isdigit():
            return

        return {
            "title": "–í–∏–±—Ä–∞—Ç–∏ —á–∏—Å–ª–æ –º–µ–Ω—à–µ –Ω—ñ–∂ {a}",
            "description": "–ë–æ–≥ —É–¥–∞—á—ñ –≤–∏–±–µ—Ä–µ –≤–∞–º —Ä–∞–Ω–¥–æ–º–Ω–æ —á–∏—Å–ª–æ, –Ω–∏–∂—á–µ –≤–∫–∞–∑–∞–Ω–æ–≥–æ!",
            "message": f"<i>–ë–æ–≥ —É–¥–∞—á—ñ –≤–∏–±–∏—Ä–∞—î —á–∏—Å–ª–æ...</i> <b>{randint(1, int(a))}</b>",
            "thumb": "https://img.icons8.com/external-flaticons-flat-flat-icons/64/000000/external-numbers-auction-house-flaticons-flat-flat-icons.png",
        }

    @loader.inline_everyone
    async def choice_inline_handler(self, query: InlineQuery) -> dict:
        """[–∞—Ä–≥—É–º–µ–Ω—Ç–∏, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–æ—é] - –ó—Ä–æ–±–∏—Ç–∏ –≤–∏–±—ñ—Ä"""

        if not query.args or not query.args.count(","):
            return

        a = query.args

        return {
            "title": "–í–∏–±–µ—Ä—É –æ–¥–Ω–µ –∑—ñ —Å–ø–∏—Å–∫—É",
            "description": "–î–æ–ø–æ–º–æ–∂—É –≤ –Ω–∞–¥—Å–∫–ª–∞–¥–Ω–æ–º—É –≤–∏–±–æ—Ä—ñ!",
            "message": (
                "<i>–ë–æ–≥ —É–¥–∞—á—ñ –≤–∏–±—Ä–∞–≤...</i>"
                f" <b>{choice(a.split(',')).strip()}</b>"
            ),
            "thumb": "https://img.icons8.com/external-filled-outline-geotatah/64/000000/external-choice-customer-satisfaction-filled-outline-filled-outline-geotatah.png",
        }